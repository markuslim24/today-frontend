[{"/Users/markus/Today/today-frontend/src/SignInForm.js":"1","/Users/markus/Today/today-frontend/src/LoginForm.js":"2","/Users/markus/Today/today-frontend/src/App.js":"3","/Users/markus/Today/today-frontend/src/Navbar.js":"4","/Users/markus/Today/today-frontend/src/index.js":"5","/Users/markus/Today/today-frontend/src/TodoList.js":"6","/Users/markus/Today/today-frontend/src/TodoItem.js":"7"},{"size":3831,"mtime":1612002113267,"results":"8","hashOfConfig":"9"},{"size":3628,"mtime":1612003099811,"results":"10","hashOfConfig":"9"},{"size":2547,"mtime":1612002227645,"results":"11","hashOfConfig":"9"},{"size":1362,"mtime":1612002193862,"results":"12","hashOfConfig":"9"},{"size":219,"mtime":1610285234878,"results":"13","hashOfConfig":"9"},{"size":2788,"mtime":1611986763449,"results":"14","hashOfConfig":"9"},{"size":2349,"mtime":1611990097304,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9gia27",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/markus/Today/today-frontend/src/SignInForm.js",["33"],"/Users/markus/Today/today-frontend/src/LoginForm.js",[],"/Users/markus/Today/today-frontend/src/App.js",["34","35","36","37"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SignInForm from \"./SignInForm\";\nimport LoginForm from \"./LoginForm\";\nimport ButtonAppBar from \"./Navbar\";\nimport TodoList from \"./TodoList\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#E9ECEF\",\n    },\n    primary: {\n      main: \"#212529\",\n    },\n    secondary: {\n      main: \"#E9ECEF\",\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  App: {\n    justify: \"center\",\n    margin: \"auto\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState({});\n  const [form, setForm] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(`http://localhost:3000/auto_login`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((resp) => resp.json())\n        .then((data) => {\n          setUser(data);\n          setIsLoggedIn(true);\n        });\n    }\n  }, []);\n\n  const handleLogin = (user) => {\n    setUser(user);\n    setIsLoggedIn(true);\n  };\n\n  const handleFormSwitch = (input) => {\n    setForm(input);\n  };\n\n  const handleAuthClick = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/user_is_authed`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((resp) => resp.json())\n      .then((data) => console.log(data));\n  };\n\n  const handleLogout = () => {\n    setUser({});\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n  };\n\n  const renderForm = () => {\n    switch (form) {\n      case \"signUp\":\n        return (\n          <SignInForm\n            handleLogin={handleLogin}\n            handleFormSwitch={handleFormSwitch}\n          />\n        );\n        break;\n      default:\n        return (\n          <LoginForm\n            handleLogin={handleLogin}\n            handleFormSwitch={handleFormSwitch}\n          />\n        );\n    }\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ButtonAppBar isLoggedIn={isLoggedIn} handleLogout={handleLogout} />\n      {isLoggedIn ? <TodoList /> : renderForm()}\n      <button onClick={handleAuthClick}>Access Authorized Route</button>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/markus/Today/today-frontend/src/Navbar.js",["38"],"/Users/markus/Today/today-frontend/src/index.js",[],["39","40"],"/Users/markus/Today/today-frontend/src/TodoList.js",[],"/Users/markus/Today/today-frontend/src/TodoItem.js",["41"],"import React, { useRef } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport EditableLabel from \"react-inline-editing\";\n\nfunction TodoItem(props) {\n  const { todo, handleTodoCheck, handleTodoEdit, handleTodoDelete } = props;\n\n  const todoTitle = useRef(todo.title);\n\n  const todoCheck = (e, id) => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/api/v1/todos/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ todo: { done: e.target.checked } }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        handleTodoCheck(data);\n      });\n  };\n\n  const handleChange = (e) => {\n    if (e.key === \"Enter\") {\n      e.currentTarget.blur();\n    } else {\n      todoTitle.current = e.target.value;\n    }\n  };\n\n  const handleTodoBlur = (id) => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/api/v1/todos/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ todo: { title: todoTitle.current } }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        handleTodoEdit(data);\n      });\n  };\n\n  const todoDelete = (id) => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/api/v1/todos/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    }).then((data) => {\n      handleTodoDelete(id);\n    });\n  };\n\n  return (\n    <li className=\"task\" todo={todo} key={todo.id}>\n      <input\n        className=\"taskCheckbox\"\n        type=\"checkbox\"\n        checked={todo.done}\n        onChange={(e) => todoCheck(e, todo.id)}\n      />\n      <ContentEditable\n        html={todoTitle.current}\n        tagName=\"label\"\n        onChange={handleChange}\n        onBlur={() => handleTodoBlur(todo.id)}\n        maxLength=\"25\"\n      />\n      <span className=\"deleteTaskBtn\" onClick={() => todoDelete(todo.id)}>\n        | x\n      </span>\n    </li>\n  );\n}\n\nexport default TodoItem;\n",{"ruleId":"42","severity":1,"message":"43","line":69,"column":9,"nodeType":"44","messageId":"45","endLine":69,"endColumn":21},{"ruleId":"42","severity":1,"message":"46","line":8,"column":8,"nodeType":"44","messageId":"45","endLine":8,"endColumn":17},{"ruleId":"42","severity":1,"message":"47","line":37,"column":9,"nodeType":"44","messageId":"45","endLine":37,"endColumn":16},{"ruleId":"42","severity":1,"message":"48","line":38,"column":10,"nodeType":"44","messageId":"45","endLine":38,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":93,"column":9,"nodeType":"51","messageId":"52","endLine":93,"endColumn":15},{"ruleId":"42","severity":1,"message":"53","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"42","severity":1,"message":"58","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":21},"no-unused-vars","'formDivStyle' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","'classes' is assigned a value but never used.","'user' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Fragment' is defined but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'EditableLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]